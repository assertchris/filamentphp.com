---
name: Tests

on:
  pull_request:
    paths-ignore:
      - '.editorconfig'
      - '.gitignore'

jobs:
  phpunit-tests:
    runs-on: ubuntu-latest

    permissions:
      checks: write
      contents: read
      issues: read
      actions: read

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: filamentphp
          MYSQL_ROOT_PASSWORD: root
          MYSQL_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2, phpunit
          extensions: mbstring,bcmath,intl,memcached,redis

      - name: Copy .env
        run: php -r "copy('.env.testing', '.env');"

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
          npm install
          npm run build

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: |
          chmod -R 777 storage bootstrap/cache
          touch storage/framework/sessions/test.txt

      - name: Migrate Database
        run: php artisan migrate

      - name: Generate docs
        run: npm run generate-docs

      - name: Run PHPUnit Tests
        run: php artisan test --parallel --processes 4 --log-junit test-results/phpunit.junit.xml

      - name: Dump docker logs on failure
        uses: jwalton/gh-docker-logs@v2
        if: failure()

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: logs
          path: storage/logs

      - name: Publish Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          files: 'test-results/*.xml'
          comment_mode: 'off'
          check_name: 'phpunit-test-results'

  dusk-tests:
    runs-on: ubuntu-latest

    permissions:
      checks: write
      contents: read
      issues: read
      actions: read

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
          MYSQL_DATABASE: filamentphp
          MYSQL_ROOT_PASSWORD: root
          MYSQL_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2, phpunit
          extensions: mbstring,bcmath,intl,memcached,redis

      - name: Copy .env
        run: php -r "copy('.env.testing', '.env');"

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
          npm install
          npm run build

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: |
          chmod -R 777 storage bootstrap/cache
          touch storage/framework/sessions/test.txt

      - name: Migrate Database
        run: php artisan migrate

      - name: Generate docs
        run: npm run generate-docs

      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &

      - name: Run Laravel Server
        run: php artisan serve --no-reload &

      - name: Run Dusk Tests
        run: php artisan dusk --log-junit test-results/dusk.junit.xml

      - name: Dump docker logs on failure
        uses: jwalton/gh-docker-logs@v2
        if: failure()

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: logs
          path: storage/logs

      - name: Publish Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          commit: ${{ github.event.workflow_run.head_sha }}
          files: 'test-results/*.xml'
          comment_mode: 'off'
          check_name: 'dusk-test-results'
